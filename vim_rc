" First Author:	Bram Moolenaar <Bram@vim.org>
" Last change by first author: 2011 Apr 15

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
 finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
 set nobackup		" do not keep a backup file, use versions instead
else
 set backup		" keep a backup file
endif

set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
 set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
 syntax on
 set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

 " Enable file type detection.
 " Use the default filetype settings, so that mail gets 'tw' set to 72,
 " 'cindent' is on in C files, etc.
 " Also load indent files, to automatically do language-dependent indenting.
 filetype plugin indent on

 " Put these in an autocmd group, so that we can delete them easily.
 augroup vimrcEx
 au!

 " For all text files set 'textwidth' to 78 characters.
 autocmd FileType text setlocal textwidth=78

 " When editing a file, always jump to the last known cursor position.
 " Don't do it when the position is invalid or when inside an event handler
 " (happens when dropping a file on gvim).
 " Also don't do it when the mark is in the first line, that is the default
 " position when opening a file.
 autocmd BufReadPost *
   \ if line("'\"") > 1 && line("'\"") <= line("$") |
   \   exe "normal! g`\"" |
   \ endif

 augroup END

else

 set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
 command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif




" --------------- From here on added based on Googling by Pradeep  -------------

" Vim with default settings does not allow easy switching between multiple files
" in the same editor window. Users can use multiple split windows or multiple
" tab pages to edit multiple files, but it is still best to enable an option to
" allow easier switching between files. One such option is the 'hidden' option, 
" which allows you to re-use the same window and switch from an unsaved buffer 
" without saving it first. Also allows you to keep an undo history for multiple
" files when re-using the same window in this way. Note that using persistent
" undo also lets you undo in multiple files even in the same window, but is less 
" efficient and is actually designed for keeping undo history after closing Vim 
" entirely. Vim will complain if you try to quit without saving, and swap files 
" will keep you safe if your computer crashes.
set hidden

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" " dialogue asking if you wish to save changed files.
set confirm

" Set the command window height to 2 lines, to avoid many cases of having to
" " "press <Enter> to continue"
set cmdheight=2

" Display line numbers on the left
set number
:nmap <C-N><C-N> :set invnumber<CR>
highlight LineNr ctermbg=DarkGray ctermfg=DarkMagenta

" enable auto expand tabs, and expand them to 2 spaces
set tabstop=4
set expandtab

" change # of space characters used for indentation
set shiftwidth=4

" do not wrap lines
set nowrap

" copy indentation as well
set copyindent

" show matching parenthesis
set showmatch

" remember more commands and history
set history=1000
set undolevels=1000

" ignore certain file extensions when using
" file name completion using tab
set wildignore=*.swp,*.back,*.o,*.obj,*.class

" do not use swapfiles
set noswapfile

" map 'shift+;' to ';'
" takes time to get habituated but less keystrokes
nnoremap ; :

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" auto reload external file changes
set autoread

" foldmethod
" set foldmethod=syntax

" set location for swap and backup files
set backupdir=~/.vim/backup
set directory=~/.vim/swap

" auto remove trailing white space for specified extensions
autocmd BufWritePre *.c :%s/\s\+$//e
autocmd BufWritePre *.cpp :%s/\s\+$//e
autocmd BufWritePre *.h :%s/\s\+$//e
autocmd BufWritePre *.cu :%s/\s\+$//e
autocmd BufWritePre *.cl :%s/\s\+$//e

execute pathogen#infect()

set t_Co=256

let g:airline_theme = 'badwolf'
